name: deploy

on:
  push:
    branches: [master]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1,4,6"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js v16.x
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Install
        run: yarn install

      - name: get-emoji
        run: |
          git clone --branch assets https://github.com/mc-cloud-town/minecraft-resource-emoji dist

          yarn emojis
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}

      - name: build
        run: |
          yarn start
          yarn build

      - name: update
        uses: test-room-7/action-update-file@v1
        with:
          file-path: assets/*
          commit-msg: add-emoji
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: build zip
        run: |
          cd resources
          zip -r resources * || echo "build to zip error"
          cp resources.zip ..
          rm resources.zip

      - name: upload Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          artifacts: "resources.zip"

      - name: make assets data
        run: |
          rm -rf ./dist/resources
          cp -R ./resources ./dist
          mkdir -p ./dist/assets
          cp -R ./assets/discordEmojis ./dict/assets

          cd ./dist
          cp ../README.md .

      - name: deploy
        run: |
          cd dist
          git config --global user.name "$user_name"
          git config --global user.email "$user_email"
          git add -A
          git status --porcelain
          if [ $(git status --porcelain | wc -l) -eq "0" ]; then
            echo "  ðŸ”´ no updates available"
          else
            echo "  ðŸŸ¢ update"
            git commit -m "${{ github.event.head_commit.message }}"
            git push -f https://_:"$token"@github.com/${{ github.event.repository.full_name }}.git
          fi
        shell: bash
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          user_name: GitHub Action
          user_email: action@github.com
